{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://github.com/CytoidCommunity/Schemas/raw/master/2.0/storyboard.json",
  "title": "JSON schema for Cytoid storyboard files",
  "definitions": {
    "note": {
      "oneOf": [
        {
          "type": "integer"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [0, 1, 2, 3, 4, 5, 6, 7]
              }
            },
            "start": {
              "type": "integer"
            },
            "end": {
              "type": "integer"
            },
            "direction": {
              "type": "integer",
              "enum": [1, -1]
            },
            "min_x": {
              "type": "number"
            },
            "max_x": {
              "type": "number"
            }
          }
        }
      ]
    },
    "time": {
      "oneOf": [
        {
          "type": "number",
          "minimum": 0
        },
        {
          "type": "string",
          "examples": [
            "start:",
            "start:$note",
            "end:",
            "end:$note",
            "intro:",
            "intro:$note",
            "at:",
            "at:$note:"
          ],
          "pattern": "^(start|end|intro|at):(\\d+|\\$note)(:-?\\d+(\\.?\\d+)?)?$"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/time"
          }
        }
      ]
    },
    "easing": {
      "$comment": "The easings listed here are taken from Easings.cs, a dependency of Cytoid. See https://github.com/Cytoid/Cytoid/blob/master/Assets/Scripts/Utils/Easings.cs",
      "type": "string",
      "enum": [
        "none",
        "easeInQuad",
        "easeOutQuad",
        "easeInOutQuad",
        "easeInCubic",
        "easeOutCubic",
        "easeInOutCubic",
        "easeInQuart",
        "easeOutQuart",
        "easeInOutQuart",
        "easeInQuint",
        "easeOutQuint",
        "easeInOutQuint",
        "easeInSine",
        "easeOutSine",
        "easeInOutSine",
        "easeInExpo",
        "easeOutExpo",
        "easeInOutExpo",
        "easeInCirc",
        "easeOutCirc",
        "easeInOutCirc",
        "easeInBounce",
        "easeOutBounce",
        "easeInOutBounce",
        "easeInBack",
        "easeOutBack",
        "easeInOutBack",
        "easeInElastic",
        "easeOutElastic",
        "easeInOutElastic",
        "linear",
        "spring",
        "blink"
      ]
    },
    "coordinate": {
      "oneOf": [
        {
          "type": "string",
          "examples": [
            "stageX:",
            "stageY:",
            "noteX:",
            "noteY:",
            "cameraX:",
            "cameraY",
            "depth:"
          ],
          "pattern": "^(stageX|stageY|noteX|noteY|cameraX|cameraY|depth:-?\\d+(\\.\\d+)?$"
        },
        {
          "type": "number",
          "default": 0
        }
      ]
    },
    "color": {
      "type": "string",
      "$comment": "https://stackoverflow.com/a/56929144",
      "pattern": "^#([\\da-fA-F]{3}){1,2}$"
    },
    "baseState": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "$note"
        },
        "time": {
          "$ref": "#/definitions/time"
        },
        "relative_time": {
          "type": "number"
        },
        "add_time": {
          "type": "number"
        },
        "easing": {
          "$ref": "#/definitions/easing"
        },
        "destroy": {
          "type": "boolean"
        }
      }
    },
    "sceneObjectState": {
      "allOf": [
        {
          "$ref": "#/definitions/baseState"
        },
        {
          "properties": {
            "note": {
              "$ref": "#/definitions/note"
            },
            "target_id": {
              "type": "string"
            },
            "x": {
              "$ref": "#/definitions/coordinate"
            },
            "y": {
              "$ref": "#/definitions/coordinate"
            },
            "z": {
              "$ref": "#/definitions/coordinate"
            },
            "rot_x": {
              "type": "number"
            },
            "rot_y": {
              "type": "number"
            },
            "rot_z": {
              "type": "number"
            },
            "scale_x": {
              "type": "number"
            },
            "scale_y": {
              "type": "number"
            },
            "scale": {
              "type": "number"
            },
            "pivot_x": {
              "type": "number"
            },
            "pivot_y": {
              "type": "number"
            },
            "opacity": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "width": {
              "$ref": "#/definitions/coordinate"
            },
            "height": {
              "$ref": "#/definitions/coordinate"
            },
            "layer": {
              "type": "integer",
              "enum": [0, 1, 2]
            },
            "order": {
              "type": "integer"
            },
            "fill_width": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "textState": {
      "allOf": [
        {
          "$ref": "#/definitions/sceneObjectState"
        },
        {
          "properties": {
            "parent_id": {
              "type": "string",
              "example": "$note"
            },
            "text": {
              "type": "string"
            },
            "color": {
              "$ref": "#/definitions/color"
            },
            "size": {
              "type": "integer"
            },
            "align": {
              "type": "string",
              "enum": [
                "upperLeft",
                "upperCenter",
                "upperRight",
                "middleLeft",
                "middleCenter",
                "middleRight",
                "lowerLeft",
                "lowerCenter",
                "lowerRight"
              ]
            },
            "letter_spacing": {
              "type": "number"
            },
            "font_weight": {
              "type": "string",
              "enum": ["regular", "extraLight", "bold", "extraBold"]
            },
            "states": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/textState"
              }
            }
          }
        }
      ]
    },
    "spriteState": {
      "allOf": [
        {
          "$ref": "#/definitions/sceneObjectState"
        },
        {
          "properties": {
            "parent_id": {
              "oneOf": [
                {
                  "type": "string",
                  "example": "$note"
                }
              ]
            },
            "path": {
              "type": "string",
              "format": "uri-reference"
            },
            "preserve_aspect": {
              "type": "boolean"
            },
            "color": {
              "$ref": "#/definitions/color"
            },
            "states": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/spriteState"
              }
            }
          }
        }
      ]
    },
    "videoState": {
      "allOf": [
        {
          "$ref": "#/definitions/sceneObjectState"
        },
        {
          "properties": {
            "path": {
              "type": "string",
              "format": "uri-reference"
            },
            "color": {
              "$ref": "#/definitions/color"
            },
            "states": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/videoState"
              }
            }
          }
        }
      ]
    },
    "noteControllerState": {
      "allOf": [
        {
          "$ref": "#/definitions/baseState"
        },
        {
          "properties": {
            "note": {
              "$ref": "#/definitions/note"
            },
            "override_x": {
              "type": "boolean"
            },
            "x": {
              "$ref": "#/definitions/coordinate"
            },
            "x_multiplier": {
              "type": "number"
            },
            "dx": {
              "$ref": "#/definitions/coordinate"
            },
            "override_y": {
              "type": "boolean"
            },
            "y": {
              "$ref": "#/definitions/coordinate"
            },
            "y_multiplier": {
              "type": "number"
            },
            "dy": {
              "$ref": "#/definitions/coordinate"
            },
            "override_z": {
              "type": "boolean"
            },
            "z": {
              "$ref": "#/definitions/coordinate"
            },
            "override_rot_x": {
              "type": "boolean"
            },
            "rot_x": {
              "type": "number"
            },
            "override_rot_y": {
              "type": "boolean"
            },
            "rot_y": {
              "type": "number"
            },
            "override_rot_z": {
              "type": "boolean"
            },
            "rot_z": {
              "type": "number"
            },
            "override_ring_color": {
              "type": "boolean"
            },
            "ring_color": {
              "$ref": "#/definitions/color"
            },
            "override_fill_color": {
              "type": "boolean"
            },
            "fill_color": {
              "$ref": "#/definitions/color"
            },
            "opacity_multiplier": {
              "type": "number"
            },
            "size_multiplier": {
              "type": "number"
            },
            "hold_direction": {
              "type": "number",
              "enum": [-1, 1]
            },
            "states": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/noteControllerState"
              }
            }
          }
        }
      ]
    },
    "lineState": {
      "allOf": [
        {
          "$ref": "#/definitions/sceneObjectState"
        },
        {
          "properties": {
            "pos": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "x": {
                    "$ref": "#/definitions/coordinate"
                  },
                  "y": {
                    "$ref": "#/definitions/coordinate"
                  },
                  "z": {
                    "$ref": "#/definitions/coordinate"
                  }
                }
              }
            },
            "width": {
              "type": "number"
            },
            "color": {
              "$ref": "#/definitions/color"
            },
            "states": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/lineState"
              }
            }
          }
        }
      ]
    },
    "sceneControllerState": {}
  },

  "type": "object",
  "properties": {
    "texts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/textState"
      }
    },
    "sprites": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/spriteState"
      }
    },
    "videos": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/videoState"
      }
    },
    "note_controllers": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/noteControllerState"
      }
    },
    "lines": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/lineState"
      }
    },
    "controllers": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/sceneControllerState"
      }
    },
    "templates": {
      "type": "object",
      "additionalProperties": {
        "oneOf": [
          {
            "$ref": "#/definitions/textState"
          },
          {
            "$ref": "#/definitions/spriteState"
          },
          {
            "$ref": "#/definitions/videoState"
          },
          {
            "$ref": "#/definitions/noteControllerState"
          },
          {
            "$ref": "#/definitions/lineState"
          },
          {
            "$ref": "#/definitions/sceneControllerState"
          }
        ]
      }
    }
  }
}
